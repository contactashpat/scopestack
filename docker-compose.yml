version: '3.8'

services:
  # OpenBao (HashiCorp Vault alternative)
  openbao:
    image: openbao/openbao:latest
    container_name: scopestack-openbao
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: scopestack-dev-token
      VAULT_DEV_LISTEN_ADDRESS: 0.0.0.0:8200
      VAULT_DEV_DISABLE_TOKEN_CLEANUP: true
    ports:
      - "8200:8200"
    volumes:
      - openbao_data:/vault/file
    networks:
      - scopestack-network
    profiles:
      - vault
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8200/v1/sys/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: scopestack-postgres
    environment:
      POSTGRES_DB: scopestack
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init:/docker-entrypoint-initdb.d
    networks:
      - scopestack-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin (Optional - Database Management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: scopestack-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@scopestack.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8081:80"
    depends_on:
      - postgres
    networks:
      - scopestack-network
    profiles:
      - tools

  # Redis (for future caching needs)
  redis:
    image: redis:7-alpine
    container_name: scopestack-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - scopestack-network
    profiles:
      - cache

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  openbao_data:
    driver: local

networks:
  scopestack-network:
    driver: bridge
